version: 0.2

phases:
  pre_build:
    commands:
      - echo Pull ghcr.io/pagopa/pn-load-test image..
      - docker pull ghcr.io/pagopa/pn-load-test:main
      - ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
      - ASSUME_ROLE_ARN="arn:aws:iam::${ACCOUNT_ID}:role/codebuild"
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name AWSCodeBuild)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - API_KEY=$( aws secretsmanager get-secret-value --secret-id secretsForTests | jq '.SecretString' | sed -e 's/^"//' -e 's/"$//' -e 's/\\"/"/g' | jq -r '.e2eTestApiKeyGA' )
  build:
    commands: |
        docker run -i -v $(pwd)/src:/src \
        -e ENV_NAME=$ENV_NAME \
        -e TEST_TYPE=$TEST_TYPE \
        -e API_KEY=$API_KEY \
        -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
        -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
        -e AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN \
        ghcr.io/pagopa/pn-load-test:main \
        /src/$TEST_SCRIPT
  post_build:
    commands:
      - echo Performance test complete
